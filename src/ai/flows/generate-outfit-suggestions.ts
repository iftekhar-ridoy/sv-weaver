// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview An outfit suggestion AI agent.
 *
 * - generateOutfitSuggestions - A function that generates outfit suggestions based on a selected item.
 * - GenerateOutfitSuggestionsInput - The input type for the generateOutfitSuggestions function.
 * - GenerateOutfitSuggestionsOutput - The return type for the generateOutfitSuggestions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateOutfitSuggestionsInputSchema = z.object({
  selectedItemDescription: z
    .string()
    .describe('The description of the selected clothing item.'),
  itemCategory: z.string().describe('The category of the selected item (e.g., shirt, pants, shoes).'),
  userStylePreferences: z
    .string()
    .optional()
    .describe('Optional: The user style preferences to tailor outfit suggestions.'),
  websiteItemDescriptions: z
    .string()
    .describe('A list of item descriptions from the website to use when generating outfit suggestions.'),
});

export type GenerateOutfitSuggestionsInput = z.infer<typeof GenerateOutfitSuggestionsInputSchema>;

const GenerateOutfitSuggestionsOutputSchema = z.object({
  suggestedOutfitItems: z
    .array(z.string())
    .describe('A list of suggested clothing items to complete the outfit.'),
  reasoning: z
    .string()
    .describe('The AI reasoning behind the outfit suggestions, explaining why the items match.'),
});

export type GenerateOutfitSuggestionsOutput = z.infer<typeof GenerateOutfitSuggestionsOutputSchema>;

export async function generateOutfitSuggestions(
  input: GenerateOutfitSuggestionsInput
): Promise<GenerateOutfitSuggestionsOutput> {
  return generateOutfitSuggestionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateOutfitSuggestionsPrompt',
  input: {schema: GenerateOutfitSuggestionsInputSchema},
  output: {schema: GenerateOutfitSuggestionsOutputSchema},
  prompt: `You are an AI fashion assistant helping users create outfits from items available on an e-commerce website.

  The user has selected the following item:
  Category: {{{itemCategory}}}
  Description: {{{selectedItemDescription}}}

  Website item descriptions:
  {{{websiteItemDescriptions}}}

  Based on this item and optionally the user style preferences:
  {{{userStylePreferences}}}

  Suggest other items from the website item descriptions that would create a complete and stylish outfit.

  Output a list of suggested items and a brief explanation of why they complement the selected item. Do not suggest the selected item as part of the outfit.
`,
});

const generateOutfitSuggestionsFlow = ai.defineFlow(
  {
    name: 'generateOutfitSuggestionsFlow',
    inputSchema: GenerateOutfitSuggestionsInputSchema,
    outputSchema: GenerateOutfitSuggestionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
